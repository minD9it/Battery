((생각해 볼 것))

2. 그래프를 어떻게 그리는게 더 분석하는 데에 좋을 것인가


-----------------------------------------------------------------------------------------------------------------------
[[TO-DO]]

2. 일반 CC 방전 데이터 확인하고 궁금한 점 질문
3. 통신 데이터 관찰&분석 -> 전압이 한 번 떨어지고 나서의 전압 변화율, 증가되었는지 확인
4. 일반 데이터 파이썬으로 뿌려보기 CC -> 받은 데이터
5. 논문에 사용할 수도 있는 데이터
    5-1. 전압이 떨어지고 나서
    5-2. 전압이 떨어지기 전

---------------------------------------------------------------------------------------------------------------------------------------
<<끝>>

30초마다

1. 통신 직전의 전압 (기준 전압)
2. 통신 전압 (최저 전압)
3. 통신 후 전압
4. 회복 정도의 전압 
    기준 전압의 0.5% 이내

5. 회복률 및 회복 시간 계산
6. 회복률 및 회복 시간을 리스트에 따로 저장

    
(기준 전압 - 현재 전압) * 100 = 전압 회복률


** 변수 **
전압 회복률
기준 전압
30mA


3. 통신 전류 기준!!
    통신 전류는 0.020을 기준으로 한다면 전압 사용률이 낮아진다..
    
    
통신 전류를 기준으로 하는 것이 아니라 전압이 떨어지는 부분을 기준으로 보는 것이 좋을 것 같다!!
-> 0A로 설정된 부분에서도 0.0001~0.0011A까지 소모되는 부분이 있기 때문

=>통신 전류가 시작되는 부분에서는 전압이 떨어지는 형상이 보이고 있다, 그렇기에 전압이 오르다가 떨어지는 부분을 기준으로 잡아야한다.


1. date를 형식에 맞춰서 바꾸는 부분에서 np.array를 사용하여 더 빠르게 할 수는 없는지
    np.array(dtype='datetime64') -> 더 느림
    !기준 전압 시간과 회복 전압 시간을 구하고 나서 그 시간들만 바꾸기
3. normal battery, dodi battery 코드가 뭔가 왜 다른지 모르겠다.

1. 데이터 분석 코드 완료하기 (통신 데이터)